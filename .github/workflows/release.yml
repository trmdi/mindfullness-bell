name: Build crx
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install crx

      - name: Write private key file
        run: echo "${{ secrets.CRX_PRIVATE_KEY }}" > extension.pem

      - name: Read version from manifest.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' src/manifest.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Pack extension to .crx
        run: |
          mkdir -p dist
          npx crx pack ./src -o dist/extension.crx -p extension.pem

      - name: Calculate Extension ID
        id: get_extension_id
        run: |
          echo "extension_id=$(./extension-id.sh extension.pem)" >> $GITHUB_OUTPUT

      - name: Create update.xml file
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          EXT_ID=${{ steps.get_extension_id.outputs.extension_id }}

          cat > dist/update.xml <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <gupdate xmlns="http://www.google.com/update2/response" protocol="2.0">
          <app appid="${EXT_ID}">
          <updatecheck codebase="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/dist/extension.crx" version="${VERSION}" />
          </app>
          </gupdate>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages

